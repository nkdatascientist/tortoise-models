# Tortoise üöÄ by Nishanth M, Apache 2.0 License                       
"""
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚£ø‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£ª‚£ø‚£ø‚£ø‚£Å‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£§‚£§‚£§‚£†‚°∂‚£ø‚°è‚†â‚†â‚†â‚†â‚¢ô‚£ø‚¢∑‚£¶‚£§‚£§‚£§‚£§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚†à‚£ª‚£∂‚£∂‚£∂‚£∂‚£ø‚†É‚†Ä‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†Ä
‚†Ä‚†à‚†õ‚†õ‚†õ‚†õ‚†õ‚†ã‚£ø‚†Ä‚†Ä‚£º‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ß‚°Ä‚†Ä‚¢ª‚°è‚†õ‚†õ‚†õ‚†õ‚†õ‚†â‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚†Ä‚†à‚†ª‚£¶‚°Ä‚†Ä‚†Ä‚¢Ä‚£¥‚†ü‚†Å‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°Ä‚†Ä‚†Ä‚£∏‚°ø‚†í‚†í‚¢ø‚£è‚†Ä‚†Ä‚†Ä‚£æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£∑‚°Ä‚†∞‚£ø‚°Ä‚†Ä‚†Ä‚¢Ä‚£Ω‚†ó‚†Ä‚£º‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚£æ‚£ø‚£Ñ‚†à‚†Å‚†Ä‚†Ä‚†à‚†Å‚£†‚£æ‚£ø‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚¢∂‚£§‚£§‚°∂‚†æ‚†ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°ø‚†ü‚†â‚†Ä‚†Ä‚†Ä‚†ª‚°ø‚†Å‚†Ä‚†Ä‚†à‚†õ‚†ø‚£ø‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä

Usage - Command
    $ python main.py val        # Validation 
                     train      # Model Finetuning 
                     quantize   # Quantization
                     export     # onnx export
"""

from tortoise.models import RetinanetModel
import torch, sys 

device = "cuda" if torch.cuda.is_available() else "cpu"
def main(args):
    img = torch.randn(1, 3, 640, 640).to(device)
    task = RetinanetModel.from_pretrained(backbone="resnet18", exp_name="experiment_7")
    if "val" in args: task.validation()
    if "train" in args: task.train()
    if "quant" in args: task.quantize()
    if "export" in args: task.export(img)

if __name__ == '__main__':
    main(sys.argv[1:])
